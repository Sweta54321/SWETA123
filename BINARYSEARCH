#include <stdio.h>


int binary_search_lower_bound(int arr[], int size, int target) {
    int left = 0, right = size - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] >= target)
            right = mid - 1;
        else
            left = mid + 1;
    }
    return left;
}


int binary_search_upper_bound(int arr[], int size, int target) {
    int left = 0, right = size - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] > target)
            right = mid - 1;
        else
            left = mid + 1;
    }
    return right;
}

int main() {
  
    int prices[] = {50, 80, 100, 150, 200, 250, 300};
    int size = sizeof(prices) / sizeof(prices[0]);

  
    int min_price = 100;
    int max_price = 200;

  
    int lower_index = binary_search_lower_bound(prices, size, min_price);
    int upper_index = binary_search_upper_bound(prices, size, max_price);

   
    printf("Products in the price range [%d, %d]:\n", min_price, max_price);
    for (int i = lower_index; i <= upper_index; i++) {
        printf("%d ", prices[i]);
    }

    return 0;
}
